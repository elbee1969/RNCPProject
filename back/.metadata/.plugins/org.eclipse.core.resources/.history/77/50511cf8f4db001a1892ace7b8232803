package fr.formation.eprint.security.services;

import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import fr.formation.eprint.apiFlow.request.LoginRequest;
import fr.formation.eprint.apiFlow.request.SignupRequest;
import fr.formation.eprint.apiFlow.response.JwtResponse;
import fr.formation.eprint.apiFlow.response.MessageResponse;
import fr.formation.eprint.dtos.DTOEntity;
import fr.formation.eprint.dtos.UserCreateDTO;
import fr.formation.eprint.entities.ERole;
import fr.formation.eprint.entities.Role;
import fr.formation.eprint.entities.User;
import fr.formation.eprint.repositories.RoleRepository;
import fr.formation.eprint.repositories.UserRepository;
import fr.formation.eprint.security.jwt.JwtUtils;

@Service
public class UserDetailsServiceImpl implements UserDetailsService {
	

	

	
	@Autowired
	UserRepository userRepository;
	


	@Override
	@Transactional
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		User user = userRepository.findByUsername(username)
				.orElseThrow(() -> new UsernameNotFoundException("User Not Found with username: " + username));

		return UserDetailsImpl.build(user);
	}
	
	
	

}